document.addEventListener("DOMContentLoaded", function () {
	// Инициализация слайдера swiper
// https://swiperjs.com/

function initSwiper() {

	if (document.querySelector(".offers-slider")) {
		const offersSlider = new Swiper(".offers-slider", {
			slidesPerView: 1.3,
			spaceBetween: 8,
			loop: true,
			// centeredSlides: true,
			breakpoints: {
				500: {
					slidesPerView: 1.7,
				},
				768: {
					slidesPerView: 2.3,
					spaceBetween: 16,
				},
				992: {
					slidesPerView: 2.3,
				},
				1200: {
					slidesPerView: 2,
					spaceBetween: 24,
				},
			},
			navigation: {
				nextEl: ".special-offers__next",
				prevEl: ".special-offers__prew",
			},
		});
	}

	if (document.querySelector(".rooms-slider")) {
		const roomsSlider = new Swiper(".rooms-slider", {
			slidesPerView: 1.3,
			// slidesPerView: "auto",
			spaceBetween: 8,
			loop: true,
			// autoHeight: false,
			// centeredSlides: true,
			breakpoints: {
				500: {
					slidesPerView: 1.7,
				},
				768: {
					slidesPerView: 2.3,
					spaceBetween: 16,
				},
				992: {
					slidesPerView: 2.3,
				},
				1400: {
					slidesPerView: 3.2,
					// slidesPerView: "auto",
					spaceBetween: 24,
				},
			},
			navigation: {
				nextEl: ".our-rooms__next",
				prevEl: ".our-rooms__prew",
			},
		});
	};

	if (document.querySelector(".other-rooms__swiper")) {
		const roomsSlider = new Swiper(".other-rooms__swiper", {
			slidesPerView: 1.3,
			// slidesPerView: "auto",
			spaceBetween: 8,
			loop: true,
			// autoHeight: false,
			// centeredSlides: true,
			breakpoints: {
				500: {
					slidesPerView: 1.7,
				},
				768: {
					slidesPerView: 2.3,
					spaceBetween: 16,
				},
				992: {
					slidesPerView: 2.3,
				},
				1400: {
					slidesPerView: 3.2,
					// slidesPerView: "auto",
					spaceBetween: 24,
				},
			},
			navigation: {
				nextEl: ".other-rooms__next",
				prevEl: ".other-rooms__prew",
			},
		});
	};

	if (document.querySelector(".slider-gallery__slider")) {
		const sliderGallery = new Swiper(".slider-gallery__slider", {
			slidesPerView: "auto",
			centeredSlides: true,
			spaceBetween: 16,
			loop: true,
			navigation: {
				prevEl: ".slider-gallery__prew",
				nextEl: ".slider-gallery__next",
			},
		});
	};

	if (document.querySelector(".reviews-slider__swiper")) {
		const offersSlider = new Swiper(".reviews-slider__swiper", {
			slidesPerView: 1.1,
			spaceBetween: 8,
			loop: true,
			// centeredSlides: true,
			breakpoints: {
				500: {
					slidesPerView: 1.7,
				},
				768: {
					slidesPerView: 2.3,
					spaceBetween: 16,
				},
				992: {
					slidesPerView: 2.3,
				},
				1200: {
					slidesPerView: 3,
					spaceBetween: 24,
				},
			},
			navigation: {
				nextEl: ".reviews-slider__next",
				prevEl: ".reviews-slider__prew",
			},
		});
	}

	if (document.querySelector(".articles-slider__swiper")) {
		const offersSlider = new Swiper(".articles-slider__swiper", {
			slidesPerView: 1.3,
			spaceBetween: 8,
			loop: true,
			// centeredSlides: true,
			breakpoints: {
				500: {
					slidesPerView: 1.7,
				},
				768: {
					slidesPerView: 2.3,
					spaceBetween: 16,
				},
				992: {
					slidesPerView: 2.3,
				},
				1200: {
					slidesPerView: 3,
					spaceBetween: 24,
				},
			},
			navigation: {
				nextEl: ".articles-slider__next",
				prevEl: ".articles-slider__prew",
			},
		});
	}

}

// window.addEventListener("resize", initSwiper);
window.addEventListener("resize", function () {
	// setTimeout(initSwiper, 200);
	initSwiper();
	// swiper.init();
});

initSwiper();
/**
 * По клику на любой элемент с указанным классом изменяем его класс. Поддерживается множество элементов
 * @param {*} element - сам элемент, его класс
 * @param {*} tagetClass - класс, который хотим добавить, удалить, переключить
 * @param {*} tagetClassAction - действие с классом add, remove, toggle
 *
 * thisElementClassChange("submenu-link", "submenu-link", "remove"); - для класса submenu-link делаем remove класса submenu-link
 *
 * thisElementClassChange("js-burger"); - пример вызова с параметрами по-умолчанию
 */

let thisElementClassChange = function (
	element,
	tagetClass = "toggle",
	tagetClassAction = "toggle"
) {
	if (document.querySelector("." + element)) {
		const elements = document.querySelectorAll("." + element);
		elements.forEach(function (elem, index) {
			elem.addEventListener("click", function (e) {
				e.preventDefault();

				switch (tagetClassAction) {
					case "add":
						this.classList.add(tagetClass);
						break;

					case "remove":
						this.classList.remove(tagetClass);
						break;

					default:
						this.classList.toggle(tagetClass);
						break;
				}
			});
		});
	}
};

thisElementClassChange("js-burger"); // для .js-burger по-умолчанию делаем toggle класса toggle

/**
 * При клике на элемент переключаем, удаляем или добавляем класс для другого эелемента.
 * @param {*} actionElement - класс элемета для клика,
 * @param {*} targetElement - класс изменяемого элемента,
 * @param {*} tagetClass - с каким классом выполняется действие,
 * @param {*} targetAction - какое действие выполняем (toggle, remove, add).
 *
 * otherElementClassChange(".js-burger", "body"); - пример с параметрами по-умолчанию - щелкая на .js-burger для body классу .toggle делаем toggle
 *
 * otherElementClassChange(".overlay", ".mobile_menu__inner", "toggle", "remove"); - пример со всеми параметрами
 */
const otherElementClassChange = function (
	actionElement,
	targetElement,
	tagetClass = "toggle",
	targetAction = "toggle"
) {
	if (
		// Если есть оба элемента
		!(
			document.querySelector(actionElement) &&
			document.querySelector(targetElement)
		)
	) {
		return;
	} else {
		const actionElements = document.querySelectorAll(actionElement);
		const targetElements = document.querySelectorAll(targetElement);
		actionElements.forEach(function (btn, index) {
			btn.addEventListener("click", function (e) {
				e.preventDefault();
				if (targetAction === "toggle") {
					if (targetElements[index].classList.contains(tagetClass)) {
						targetElements[index].classList.remove(tagetClass);
					} else {
						targetElements[index].classList.add(tagetClass);
					}
				}
				if (targetAction === "remove") {
					targetElements[index].classList.remove(tagetClass);
				}
				if (targetAction === "add") {
					targetElements[index].classList.add(tagetClass);
				}
			});
		});
	}
};

// Открываем бургер меню по клику на .mobile_menu_btn
otherElementClassChange(".jsMobileMenuBtnToggle", ".mobile-menu");
otherElementClassChange(".jsMobileMenuBtnToggle", "body");

/**
 * При ресайзе завкрыаем .mobile-menu
 */
let mobileMenuClose = function () {
	const elBody = document.querySelector("body");
	const elBurger = document.querySelector(".js-burger");
	const elMobileMenu = document.querySelector(".mobile-menu");

	if (elBody && elBurger && elMobileMenu) {
		elBody.classList.remove("toggle");
		elBurger.classList.remove("toggle");
		elMobileMenu.classList.remove("toggle");
	}
};

window.addEventListener("resize", mobileMenuClose);

/**
 * Вычисление позиции и размера панели мобильного меню
 */
if (document.querySelector(".jsMobileMenuBtnToggle")) {
	let menuPanelInit = function () {
		const menuBtn = document.querySelector(".jsMobileMenuBtnToggle");

		// Определяем высоту мобильного меню и размещаем под шапкой
		function menuPanelPosition() {
			const heightViewport = document.documentElement.clientHeight;
			const heightHeader = document.querySelector(".header").offsetHeight;

			// const heightMenuOverlay = heightViewport - heightHeader;
			const heightMenuOverlay = heightViewport;

			const menuActive = document.querySelector(".mobile-menu.toggle");

			if (menuActive) {
				menuActive.style.height = heightMenuOverlay + "px";
				menuActive.style.paddingTop = heightHeader + "px";
				// menuActive.style.top = heightHeader + "px";
			}
		}

		menuBtn.addEventListener("click", menuPanelPosition);
	};

	menuPanelInit();
}

/**
 * Перемещение элемента в другой элемент.
 * @param {*} block - что перемещаем
 * @param {*} to - куда перемещаем
 * @param {*} metod - метод переноса prepend, append, before, after
 *
 * movingConstructor(".header-contacts", ".mobile-menu", "after"); - пример вызова
 */

let movingConstructor = function (block, to, metod) {
	if (!(document.querySelector(block) && document.querySelector(to))) {
		return;
	} else {
		switch (metod) {
			case "prepend":
				document
					.querySelector(to)
					.prepend(document.querySelector(block));
				break;

			case "before":
				document
					.querySelector(to)
					.before(document.querySelector(block));
				break;

			case "after":
				document.querySelector(to).after(document.querySelector(block));
				break;

			default:
				document
					.querySelector(to)
					.append(document.querySelector(block));
				break;
		}
	}
};

// функция будет перемещать блок в указанное место при определенной ширине экрана
let moving = function () {
	const windowWidth = window.innerWidth; // ширина экрана

	if (windowWidth <= 992) {
		movingConstructor(".header-nav", ".mobile-menu__top", "append");
		movingConstructor(
			".header-nav__phone",
			".mobile-menu__bottom",
			"prepend"
		);
		movingConstructor(".header-nav__btn", ".mobile-menu__bottom", "append");
		movingConstructor(".footer-right__top", ".footer", "prepend");
		// movingConstructor(".footer-btn", ".footer-right__top", "append");
		movingConstructor(".our-rooms__all", ".our-rooms__col--slider", "append");
	} else {
		movingConstructor(".header-nav__btn", ".header", "prepend");
		movingConstructor(".header-nav__phone", ".header", "prepend");
		movingConstructor(".header-nav", ".header", "prepend");
		movingConstructor(".footer-right__top", ".footer-right", "prepend");
		// movingConstructor(
		// 	".footer-btn",
		// 	".footer-right__bottom .footer-right__box",
		// 	"prepend"
		// );
		movingConstructor(".our-rooms__all", ".our-rooms__controls", "append");

	}

	if (windowWidth <= 480) {
		movingConstructor(".other-rooms__all", ".other-rooms__bottom", "append");
	} else {
		movingConstructor(".other-rooms__all", ".other-rooms__top", "append");
	}
};

moving();
window.addEventListener("resize", moving);
let advantagesHover = function () {
	if (
		!(
			document.querySelector(".advantages-item") &&
			document.querySelector(".advantages-img__box")
		)
	) {
		return;
	} else {
		let advantagesItems = document.querySelectorAll(".advantages-item");
		let advantagesImgBox = document.querySelector(".advantages-img__box");

		// Инициализация - выводим первую картинку в блок
		let dataImg = document.querySelector(".advantages-item").getAttribute("data-img");
		advantagesImgBox.setAttribute('style', `background-image: url(${dataImg});`);

		// Изменяем картинку по наведению на нужный блок
		advantagesItems.forEach(function (elem) {
			elem.addEventListener("mouseenter", function (e) {
				dataImg = this.getAttribute("data-img");
				advantagesImgBox.setAttribute('style', `background-image: url(${dataImg});`);
			});
		});
	}
};

advantagesHover();


let advantagesToSlider = function () {

	if (
		!(
			document.querySelector(".advantages-list") &&
			document.querySelector(".advantages-list__wrapper") &&
			document.querySelector(".advantages-list__item")
		)
	) {
		return; // Если всех элементов нет, завершаем
	} else {
		let advantagesList = document.querySelector(".advantages-list");
		let advantagesListWrapper = document.querySelector(".advantages-list__wrapper");
		let advantagesListItems = document.querySelectorAll(".advantages-list__item");

		const windowWidth = window.innerWidth; // ширина экрана

		if (windowWidth <= 992) {
			advantagesList.classList.add('swiper');
			advantagesListWrapper.classList.add('swiper-wrapper');

			advantagesListItems.forEach(function(elem) {
				elem.classList.add('swiper-slide');
			});

			const advantagesListSlider = new Swiper(".advantages-list", {
				slidesPerView: 1.3,
				spaceBetween: 8,
				loop: true,

				breakpoints: {
					500: {
						slidesPerView: 1.7,
					},
					768: {
						slidesPerView: 2.3,
						spaceBetween: 16,
					},
					992: {
						slidesPerView: 2.3,
					},
				},

			});

		} else {
			// advantagesListSlider.destroy();

			advantagesList.classList.remove('swiper');

			advantagesListWrapper.classList.remove('swiper-wrapper');
			advantagesListWrapper.setAttribute('style', '');

			advantagesListItems.forEach(function(elem) {
				elem.classList.remove('swiper-slide');
				elem.setAttribute('style', '');
			});

		};

	};


};

advantagesToSlider();
window.addEventListener("resize", advantagesToSlider);

// Показать / скрыть скрытый текст отзыва
if (document.querySelector(".rs-item__toggle")) {
	const textMore = document.getElementsByClassName("rs-item__toggle");
	for (let element of textMore) {
		// console.log(element);

		element.addEventListener("click", function () {
			element.closest(".rs-item").classList.toggle("active");
			if (element.textContent == "Скрыть") {
				element.textContent = "Показать ещё";
			} else {
				element.textContent = "Скрыть";
			}
		});
	};
};
/**
 * Фиксируем шапку при прокрутке страницы
 */
const headerFixed = function () {
	let posTop = window.scrollY; // позиция прокрутки
	const header = document.querySelector(".header");
	const headerTransparent = document.querySelector(".header.transparent");
	const heightHeader = document.querySelector(".header").offsetHeight;

	if (posTop > 0) {
		header.classList.add("fixed");
	} else {
		header.classList.remove("fixed");
	}

	if (!headerTransparent) {
		if (posTop > 0) {
			document.querySelector('body').style.paddingTop = heightHeader + "px";
		} else {
			document.querySelector('body').style.paddingTop = 0 + "px";
		}
	};
};

headerFixed();
// запускаем headerFixed при ресайзе
window.addEventListener("resize", headerFixed);
window.addEventListener("scroll", headerFixed);
// При закрытии акции прячем ее на 1 день
let hotInfoClose = function () {
	const hotInfo = document.querySelector(".hot-info");
	const hotInfoBtn = document.querySelector(".hot-info__btn");

	if (hotInfo && hotInfoBtn) {
		// document.addEventListener("DOMContentLoaded", function () {
			function setCookie(name, value, days) {
				let expires = "";
				if (days) {
					let date = new Date();
					date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
					expires = "; expires=" + date.toUTCString();
				}
				document.cookie = name + "=" + (value || "") + expires + "; path=/";
			}
		
			function getCookie(name) {
				let matches = document.cookie.match(
					new RegExp(
						"(?:^|; )" +
							name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, "\\$1") +
							"=([^;]*)"
					)
				);
				return matches ? decodeURIComponent(matches[1]) : undefined;
			}
		
			function checkCookies() {

				// Если куки cookies_policy нет или она просрочена, то показываем уведомление
				if (!getCookie("cookies_policy")) {
					hotInfo.classList.add("show");
				}
		
				// При клике на кнопку устанавливаем куку cookies_policy на один день
				hotInfoBtn.addEventListener("click", function(e) {
					setCookie("cookies_policy", "true", 1);
					hotInfo.classList.remove("show");
				});
			}

			checkCookies();
		// });

	}
};

hotInfoClose();});


